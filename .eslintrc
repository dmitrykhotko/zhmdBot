{
    "env": {
        "browser": true,
        "node": true,
        "es6": true
    },
    "parserOptions": {
        "sourceType": "module"
    },
    "plugins": [
        "prettier"
    ],
    "extends": [
        "plugin:prettier/recommended",
        "prettier"
    ],
    "rules": {
        "object-shorthand": ["error"],
        "quote-props": ["error", "as-needed"],
        "no-const-assign": ["error"],
        "no-var": ["error"],
        "no-new-object": ["error"],
        "no-array-constructor": ["error"],
        "array-callback-return": ["error"],
        "template-curly-spacing": ["error", "never"],
        "no-useless-escape": ["error"],
        // "func-style": ["error", "expression"],
        "wrap-iife": ["error", "outside"],
        "no-param-reassign": ["error"],
        "prefer-template": ["error"],
        "prefer-spread": ["warn"],
        "prefer-rest-params": ["warn"],
        "arrow-spacing": ["error", {"before": true, "after": true}],
        "arrow-parens": ["warn", "as-needed"],
        "no-confusing-arrow": ["off"],
        "no-duplicate-imports": ["error"],
        "no-iterator": ["error"],
        "no-alert": ["error"],
        "no-restricted-syntax": ["error", "WithStatement", "DoWhileStatement"],
        "generator-star-spacing": ["error", {"before": true, "after": false}],
        "dot-notation": ["error"],
        "prefer-const": ["error"],
        "one-var": ["warn", "never"],
        "brace-style": ["error", "1tbs", {"allowSingleLine": true}],
        "space-before-blocks": ["error", "always"],
        "keyword-spacing": ["error", {"before": true, "after": true}],
        "space-infix-ops": ["error"],
        "no-whitespace-before-property": ["error"],
        "space-in-parens": ["error", "never"],
        "array-bracket-spacing": ["error", "never"],
        "object-curly-spacing": ["error", "always"],
        "camelcase": ["error", {"properties": "never"}],
        // "id-length": ["error", {"exceptions": ["x", "y", "z", "e", "_", "$", "a", "b", "c", "i", "j", "k", "s"]}],
        "eqeqeq": ["error", "always"],
        "no-lonely-if": ["error"],
        "no-mixed-spaces-and-tabs": ["off"],
        "no-multi-spaces": ["error"],
        "no-lone-blocks": ["error"],
        "no-loop-func": ["warn"],
        "no-eval": ["error"],
        "no-return-assign": ["error", "except-parens"],
        "key-spacing": ["error", { "beforeColon": false, "afterColon": true, "mode": "minimum" }],
        "no-mixed-requires": ["warn"],
        "new-cap": ["error", {"newIsCap": true, "capIsNewExceptions": ["Router", "HOC", "Server"]}],
        "no-unused-vars": ["error", {"vars": "local", "args": "after-used"}],
        "no-delete-var": ["warn"],
        "no-shadow-restricted-names": ["error"],
        "no-undef": ["error"],
        "no-underscore-dangle": ["error", {"allow": ["_id"]}],
        "no-use-before-define": ["error"],
        "callback-return": ["off"],
        "no-new-func": ["warn"],
        "no-new-require": ["error"],
        "no-labels": ["error"],
        "no-sync": 0,
        "no-path-concat": 0,
        "handle-callback-err": 0,
        "no-undefined": 0,
        "no-undef-init": 0,
        "no-label-var": 0,
        "no-catch-shadow": 0,
        "init-declarations": 0,
        "no-process-exit": 0,
        "no-shadow": 0,
        "consistent-return": 0,
        "curly": ["error", "all"],
        "block-spacing": ["error", "always"],
        "default-case": ["error", { "commentPattern": "^no default$" }]
    },
    overrides: [{
        files: ["*.ts", "*.tsx"],
        parser: "@typescript-eslint/parser",
        "parserOptions": {
          "project": ["tsconfig.json"]
        },
        plugins: ["@typescript-eslint"],
        extends: [
            "plugin:@typescript-eslint/recommended",
            "plugin:@typescript-eslint/eslint-recommended",
            "plugin:@typescript-eslint/recommended-requiring-type-checking"
        ],

        /**
         * Typescript Rules
         * https://github.com/bradzacher/eslint-plugin-typescript
         * Enable your own typescript rules.
         */
        rules: {
            // Require a consistent member declaration order
            "@typescript-eslint/member-ordering": "error",
            "@typescript-eslint/no-empty-function": "warn",
            "@typescript-eslint/explicit-function-return-type": "error"
        },
    }]
}
